{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.13","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":260807,"sourceType":"datasetVersion","datasetId":109196},{"sourceId":7843142,"sourceType":"datasetVersion","datasetId":4598363}],"dockerImageVersionId":30746,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"import pandas as pd","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","execution":{"iopub.status.busy":"2024-08-03T01:35:05.347188Z","iopub.execute_input":"2024-08-03T01:35:05.347914Z","iopub.status.idle":"2024-08-03T01:35:05.806049Z","shell.execute_reply.started":"2024-08-03T01:35:05.347876Z","shell.execute_reply":"2024-08-03T01:35:05.804869Z"},"trusted":true},"execution_count":2,"outputs":[]},{"cell_type":"code","source":"df=pd.read_csv(\"/kaggle/input/190k-spam-ham-email-dataset-for-classification/spam_Emails_data.csv\")","metadata":{"execution":{"iopub.status.busy":"2024-08-03T01:35:05.808173Z","iopub.execute_input":"2024-08-03T01:35:05.808656Z","iopub.status.idle":"2024-08-03T01:35:14.543143Z","shell.execute_reply.started":"2024-08-03T01:35:05.808624Z","shell.execute_reply":"2024-08-03T01:35:14.541960Z"},"trusted":true},"execution_count":3,"outputs":[]},{"cell_type":"code","source":"df","metadata":{"execution":{"iopub.status.busy":"2024-08-03T01:35:14.544512Z","iopub.execute_input":"2024-08-03T01:35:14.544856Z","iopub.status.idle":"2024-08-03T01:35:14.572409Z","shell.execute_reply.started":"2024-08-03T01:35:14.544827Z","shell.execute_reply":"2024-08-03T01:35:14.571164Z"},"trusted":true},"execution_count":4,"outputs":[{"execution_count":4,"output_type":"execute_result","data":{"text/plain":"       label                                               text\n0       Spam  viiiiiiagraaaa\\nonly for the ones that want to...\n1        Ham  got ice thought look az original message ice o...\n2       Spam  yo ur wom an ne eds an escapenumber in ch ma n...\n3       Spam  start increasing your odds of success & live s...\n4        Ham  author jra date escapenumber escapenumber esca...\n...      ...                                                ...\n193847   Ham  on escapenumber escapenumber escapenumber rob ...\n193848  Spam  we have everything you need escapelong cialesc...\n193849   Ham  hi quick question say i have a date variable i...\n193850  Spam  thank you for your loan request which we recie...\n193851   Ham  this is an automatically generated delivery st...\n\n[193852 rows x 2 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>label</th>\n      <th>text</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>Spam</td>\n      <td>viiiiiiagraaaa\\nonly for the ones that want to...</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>Ham</td>\n      <td>got ice thought look az original message ice o...</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>Spam</td>\n      <td>yo ur wom an ne eds an escapenumber in ch ma n...</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>Spam</td>\n      <td>start increasing your odds of success &amp; live s...</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>Ham</td>\n      <td>author jra date escapenumber escapenumber esca...</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>193847</th>\n      <td>Ham</td>\n      <td>on escapenumber escapenumber escapenumber rob ...</td>\n    </tr>\n    <tr>\n      <th>193848</th>\n      <td>Spam</td>\n      <td>we have everything you need escapelong cialesc...</td>\n    </tr>\n    <tr>\n      <th>193849</th>\n      <td>Ham</td>\n      <td>hi quick question say i have a date variable i...</td>\n    </tr>\n    <tr>\n      <th>193850</th>\n      <td>Spam</td>\n      <td>thank you for your loan request which we recie...</td>\n    </tr>\n    <tr>\n      <th>193851</th>\n      <td>Ham</td>\n      <td>this is an automatically generated delivery st...</td>\n    </tr>\n  </tbody>\n</table>\n<p>193852 rows × 2 columns</p>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"df[\"label\"].replace({\"Spam\":1,\"Ham\":0},inplace=True)","metadata":{"execution":{"iopub.status.busy":"2024-08-03T01:35:14.575138Z","iopub.execute_input":"2024-08-03T01:35:14.575496Z","iopub.status.idle":"2024-08-03T01:35:14.723456Z","shell.execute_reply.started":"2024-08-03T01:35:14.575464Z","shell.execute_reply":"2024-08-03T01:35:14.722264Z"},"trusted":true},"execution_count":5,"outputs":[{"name":"stderr","text":"/tmp/ipykernel_33/3093763064.py:1: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.\nThe behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.\n\nFor example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.\n\n\n  df[\"label\"].replace({\"Spam\":1,\"Ham\":0},inplace=True)\n/tmp/ipykernel_33/3093763064.py:1: FutureWarning: Downcasting behavior in `replace` is deprecated and will be removed in a future version. To retain the old behavior, explicitly call `result.infer_objects(copy=False)`. To opt-in to the future behavior, set `pd.set_option('future.no_silent_downcasting', True)`\n  df[\"label\"].replace({\"Spam\":1,\"Ham\":0},inplace=True)\n","output_type":"stream"}]},{"cell_type":"code","source":"df","metadata":{"execution":{"iopub.status.busy":"2024-08-03T01:35:14.725064Z","iopub.execute_input":"2024-08-03T01:35:14.725444Z","iopub.status.idle":"2024-08-03T01:35:14.742526Z","shell.execute_reply.started":"2024-08-03T01:35:14.725414Z","shell.execute_reply":"2024-08-03T01:35:14.741385Z"},"trusted":true},"execution_count":6,"outputs":[{"execution_count":6,"output_type":"execute_result","data":{"text/plain":"        label                                               text\n0           1  viiiiiiagraaaa\\nonly for the ones that want to...\n1           0  got ice thought look az original message ice o...\n2           1  yo ur wom an ne eds an escapenumber in ch ma n...\n3           1  start increasing your odds of success & live s...\n4           0  author jra date escapenumber escapenumber esca...\n...       ...                                                ...\n193847      0  on escapenumber escapenumber escapenumber rob ...\n193848      1  we have everything you need escapelong cialesc...\n193849      0  hi quick question say i have a date variable i...\n193850      1  thank you for your loan request which we recie...\n193851      0  this is an automatically generated delivery st...\n\n[193852 rows x 2 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>label</th>\n      <th>text</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1</td>\n      <td>viiiiiiagraaaa\\nonly for the ones that want to...</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>0</td>\n      <td>got ice thought look az original message ice o...</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>1</td>\n      <td>yo ur wom an ne eds an escapenumber in ch ma n...</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>1</td>\n      <td>start increasing your odds of success &amp; live s...</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>0</td>\n      <td>author jra date escapenumber escapenumber esca...</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>193847</th>\n      <td>0</td>\n      <td>on escapenumber escapenumber escapenumber rob ...</td>\n    </tr>\n    <tr>\n      <th>193848</th>\n      <td>1</td>\n      <td>we have everything you need escapelong cialesc...</td>\n    </tr>\n    <tr>\n      <th>193849</th>\n      <td>0</td>\n      <td>hi quick question say i have a date variable i...</td>\n    </tr>\n    <tr>\n      <th>193850</th>\n      <td>1</td>\n      <td>thank you for your loan request which we recie...</td>\n    </tr>\n    <tr>\n      <th>193851</th>\n      <td>0</td>\n      <td>this is an automatically generated delivery st...</td>\n    </tr>\n  </tbody>\n</table>\n<p>193852 rows × 2 columns</p>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"from sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(df.text, df.label, test_size=0.2)","metadata":{"execution":{"iopub.status.busy":"2024-08-03T01:35:14.744091Z","iopub.execute_input":"2024-08-03T01:35:14.744464Z","iopub.status.idle":"2024-08-03T01:35:15.532792Z","shell.execute_reply.started":"2024-08-03T01:35:14.744434Z","shell.execute_reply":"2024-08-03T01:35:15.531534Z"},"trusted":true},"execution_count":7,"outputs":[]},{"cell_type":"code","source":"X_train.dtype","metadata":{"execution":{"iopub.status.busy":"2024-08-03T01:58:11.489438Z","iopub.execute_input":"2024-08-03T01:58:11.490488Z","iopub.status.idle":"2024-08-03T01:58:11.497375Z","shell.execute_reply.started":"2024-08-03T01:58:11.490448Z","shell.execute_reply":"2024-08-03T01:58:11.496134Z"},"trusted":true},"execution_count":62,"outputs":[{"execution_count":62,"output_type":"execute_result","data":{"text/plain":"dtype('O')"},"metadata":{}}]},{"cell_type":"code","source":"from sklearn.feature_extraction.text import CountVectorizer\n\nv = CountVectorizer()\nX_train_cv = v.fit_transform(X_train.astype('U').values)\nX_train_cv\n","metadata":{"execution":{"iopub.status.busy":"2024-08-03T01:35:15.547611Z","iopub.execute_input":"2024-08-03T01:35:15.548071Z","iopub.status.idle":"2024-08-03T01:36:07.190913Z","shell.execute_reply.started":"2024-08-03T01:35:15.548023Z","shell.execute_reply":"2024-08-03T01:36:07.189638Z"},"trusted":true},"execution_count":9,"outputs":[{"execution_count":9,"output_type":"execute_result","data":{"text/plain":"<155081x462064 sparse matrix of type '<class 'numpy.int64'>'\n\twith 18511848 stored elements in Compressed Sparse Row format>"},"metadata":{}}]},{"cell_type":"code","source":"from sklearn.naive_bayes import MultinomialNB\n\nmodel = MultinomialNB()\nmodel.fit(X_train_cv, y_train)","metadata":{"execution":{"iopub.status.busy":"2024-08-03T01:36:07.192698Z","iopub.execute_input":"2024-08-03T01:36:07.193178Z","iopub.status.idle":"2024-08-03T01:36:07.457273Z","shell.execute_reply.started":"2024-08-03T01:36:07.193139Z","shell.execute_reply":"2024-08-03T01:36:07.456093Z"},"trusted":true},"execution_count":10,"outputs":[{"execution_count":10,"output_type":"execute_result","data":{"text/plain":"MultinomialNB()","text/html":"<style>#sk-container-id-1 {color: black;background-color: white;}#sk-container-id-1 pre{padding: 0;}#sk-container-id-1 div.sk-toggleable {background-color: white;}#sk-container-id-1 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-1 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-1 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-1 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-1 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-1 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-1 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-1 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-1 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-1 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-1 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-1 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-1 div.sk-item {position: relative;z-index: 1;}#sk-container-id-1 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-1 div.sk-item::before, #sk-container-id-1 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-1 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-1 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-1 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-1 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-1 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-1 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-1 div.sk-label-container {text-align: center;}#sk-container-id-1 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-1 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-1\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>MultinomialNB()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-1\" type=\"checkbox\" checked><label for=\"sk-estimator-id-1\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">MultinomialNB</label><div class=\"sk-toggleable__content\"><pre>MultinomialNB()</pre></div></div></div></div></div>"},"metadata":{}}]},{"cell_type":"code","source":"X_test_cv = v.transform(X_test)","metadata":{"execution":{"iopub.status.busy":"2024-08-03T01:36:07.461627Z","iopub.execute_input":"2024-08-03T01:36:07.462348Z","iopub.status.idle":"2024-08-03T01:36:19.624416Z","shell.execute_reply.started":"2024-08-03T01:36:07.462312Z","shell.execute_reply":"2024-08-03T01:36:19.623235Z"},"trusted":true},"execution_count":11,"outputs":[]},{"cell_type":"code","source":"from sklearn.metrics import classification_report\n\ny_pred = model.predict(X_test_cv)\n\nprint(classification_report(y_test, y_pred))\n","metadata":{"execution":{"iopub.status.busy":"2024-08-03T01:36:19.625743Z","iopub.execute_input":"2024-08-03T01:36:19.626110Z","iopub.status.idle":"2024-08-03T01:36:19.775704Z","shell.execute_reply.started":"2024-08-03T01:36:19.626079Z","shell.execute_reply":"2024-08-03T01:36:19.774479Z"},"trusted":true},"execution_count":12,"outputs":[{"name":"stdout","text":"              precision    recall  f1-score   support\n\n           0       0.95      0.98      0.97     20513\n           1       0.98      0.94      0.96     18258\n\n    accuracy                           0.96     38771\n   macro avg       0.96      0.96      0.96     38771\nweighted avg       0.96      0.96      0.96     38771\n\n","output_type":"stream"}]},{"cell_type":"code","source":"emails = [\n    'Hey, MyPanera member! Dont miss your chance to get your faves delivered to your door for FREE!Check your MyPanera account to score your exclusive reward. Lucky you!',\n    'Last chance to celebrate 20 iconic years with iconic deals! Save up to $400 on our newest razr family so you can flip back like its 2004'\n]\n\nemails_count = v.transform(emails)\nmodel.predict(emails_count)","metadata":{"execution":{"iopub.status.busy":"2024-08-03T01:36:19.777560Z","iopub.execute_input":"2024-08-03T01:36:19.778522Z","iopub.status.idle":"2024-08-03T01:36:19.792622Z","shell.execute_reply.started":"2024-08-03T01:36:19.778478Z","shell.execute_reply":"2024-08-03T01:36:19.791216Z"},"trusted":true},"execution_count":13,"outputs":[{"execution_count":13,"output_type":"execute_result","data":{"text/plain":"array([1, 1])"},"metadata":{}}]},{"cell_type":"code","source":"X_train_cv.shape","metadata":{"execution":{"iopub.status.busy":"2024-08-03T01:36:19.794809Z","iopub.execute_input":"2024-08-03T01:36:19.795210Z","iopub.status.idle":"2024-08-03T01:36:19.802584Z","shell.execute_reply.started":"2024-08-03T01:36:19.795179Z","shell.execute_reply":"2024-08-03T01:36:19.801436Z"},"trusted":true},"execution_count":14,"outputs":[{"execution_count":14,"output_type":"execute_result","data":{"text/plain":"(155081, 462064)"},"metadata":{}}]},{"cell_type":"code","source":"import tensorflow\nfrom tensorflow import keras \nnn_model=keras.Sequential([\n    keras.layers.Dense(16,input_shape=(462064,),activation=\"relu\"),\n    keras.layers.Dense(32,activation=\"relu\"),\n    keras.layers.Dense(16,activation=\"relu\"),\n    keras.layers.Dense(32,activation=\"relu\"),\n    keras.layers.Dense(1,activation=\"sigmoid\")\n])","metadata":{"execution":{"iopub.status.busy":"2024-08-03T01:37:10.934208Z","iopub.execute_input":"2024-08-03T01:37:10.934681Z","iopub.status.idle":"2024-08-03T01:37:11.028484Z","shell.execute_reply.started":"2024-08-03T01:37:10.934644Z","shell.execute_reply":"2024-08-03T01:37:11.027135Z"},"trusted":true},"execution_count":18,"outputs":[]},{"cell_type":"code","source":"nn_model.compile(\noptimizer=\"adam\",\nloss=\"binary_crossentropy\",\nmetrics=[\"accuracy\"])","metadata":{"execution":{"iopub.status.busy":"2024-08-03T01:37:17.044674Z","iopub.execute_input":"2024-08-03T01:37:17.045119Z","iopub.status.idle":"2024-08-03T01:37:17.058033Z","shell.execute_reply.started":"2024-08-03T01:37:17.045086Z","shell.execute_reply":"2024-08-03T01:37:17.056586Z"},"trusted":true},"execution_count":19,"outputs":[]},{"cell_type":"code","source":"nn_model.fit(X_train_cv, y_train,epochs=10,batch_size=128)","metadata":{"execution":{"iopub.status.busy":"2024-08-03T01:37:21.217085Z","iopub.execute_input":"2024-08-03T01:37:21.217481Z","iopub.status.idle":"2024-08-03T01:45:41.011243Z","shell.execute_reply.started":"2024-08-03T01:37:21.217453Z","shell.execute_reply":"2024-08-03T01:45:41.010119Z"},"trusted":true},"execution_count":20,"outputs":[{"name":"stdout","text":"Epoch 1/10\n\u001b[1m1212/1212\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m47s\u001b[0m 37ms/step - accuracy: 0.9510 - loss: 0.2035\nEpoch 2/10\n\u001b[1m1212/1212\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m43s\u001b[0m 36ms/step - accuracy: 0.9960 - loss: 0.0135\nEpoch 3/10\n\u001b[1m1212/1212\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m44s\u001b[0m 36ms/step - accuracy: 0.9983 - loss: 0.0058\nEpoch 4/10\n\u001b[1m1212/1212\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m43s\u001b[0m 36ms/step - accuracy: 0.9988 - loss: 0.0045\nEpoch 5/10\n\u001b[1m1212/1212\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m47s\u001b[0m 39ms/step - accuracy: 0.9989 - loss: 0.0034\nEpoch 6/10\n\u001b[1m1212/1212\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m48s\u001b[0m 39ms/step - accuracy: 0.9990 - loss: 0.0038\nEpoch 7/10\n\u001b[1m1212/1212\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m82s\u001b[0m 40ms/step - accuracy: 0.9990 - loss: 0.0046\nEpoch 8/10\n\u001b[1m1212/1212\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m48s\u001b[0m 39ms/step - accuracy: 0.9994 - loss: 0.0018\nEpoch 9/10\n\u001b[1m1212/1212\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m48s\u001b[0m 39ms/step - accuracy: 0.9991 - loss: 0.0028\nEpoch 10/10\n\u001b[1m1212/1212\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m47s\u001b[0m 39ms/step - accuracy: 0.9995 - loss: 0.0016\n","output_type":"stream"},{"execution_count":20,"output_type":"execute_result","data":{"text/plain":"<keras.src.callbacks.history.History at 0x7b92416544f0>"},"metadata":{}}]},{"cell_type":"code","source":"pred=nn_model.predict(X_test_cv)","metadata":{"execution":{"iopub.status.busy":"2024-08-03T01:45:45.720157Z","iopub.execute_input":"2024-08-03T01:45:45.720582Z","iopub.status.idle":"2024-08-03T01:45:50.207447Z","shell.execute_reply.started":"2024-08-03T01:45:45.720546Z","shell.execute_reply":"2024-08-03T01:45:50.206256Z"},"trusted":true},"execution_count":21,"outputs":[{"name":"stdout","text":"\u001b[1m1212/1212\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m4s\u001b[0m 3ms/step\n","output_type":"stream"}]},{"cell_type":"code","source":"binary_output = (pred >= 0.5).astype(int)","metadata":{"execution":{"iopub.status.busy":"2024-08-03T01:46:00.218177Z","iopub.execute_input":"2024-08-03T01:46:00.218607Z","iopub.status.idle":"2024-08-03T01:46:00.224617Z","shell.execute_reply.started":"2024-08-03T01:46:00.218574Z","shell.execute_reply":"2024-08-03T01:46:00.223067Z"},"trusted":true},"execution_count":24,"outputs":[]},{"cell_type":"code","source":"print(classification_report(y_test, binary_output))","metadata":{"execution":{"iopub.status.busy":"2024-08-03T01:46:03.582196Z","iopub.execute_input":"2024-08-03T01:46:03.582587Z","iopub.status.idle":"2024-08-03T01:46:03.671246Z","shell.execute_reply.started":"2024-08-03T01:46:03.582558Z","shell.execute_reply":"2024-08-03T01:46:03.670083Z"},"trusted":true},"execution_count":25,"outputs":[{"name":"stdout","text":"              precision    recall  f1-score   support\n\n           0       0.99      0.99      0.99     20513\n           1       0.99      0.99      0.99     18258\n\n    accuracy                           0.99     38771\n   macro avg       0.99      0.99      0.99     38771\nweighted avg       0.99      0.99      0.99     38771\n\n","output_type":"stream"}]},{"cell_type":"code","source":"emails = [\n    'Hey mohan, can we get together to watch footbal game tomorrow?',\n    'Upto 20% discount on parking, exclusive offer just for you. Dont miss this reward!'\n]\n\nemails_count = v.transform(emails)\npredicted=nn_model.predict(emails_count)\nvalues=(predicted >= 0.5).astype(int).reshape(-1)","metadata":{"execution":{"iopub.status.busy":"2024-08-03T01:46:07.255132Z","iopub.execute_input":"2024-08-03T01:46:07.255564Z","iopub.status.idle":"2024-08-03T01:46:07.464415Z","shell.execute_reply.started":"2024-08-03T01:46:07.255527Z","shell.execute_reply":"2024-08-03T01:46:07.463188Z"},"trusted":true},"execution_count":26,"outputs":[{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 48ms/step\n","output_type":"stream"}]},{"cell_type":"code","source":"values","metadata":{"execution":{"iopub.status.busy":"2024-08-03T01:46:19.091377Z","iopub.execute_input":"2024-08-03T01:46:19.091858Z","iopub.status.idle":"2024-08-03T01:46:19.099152Z","shell.execute_reply.started":"2024-08-03T01:46:19.091822Z","shell.execute_reply":"2024-08-03T01:46:19.097971Z"},"trusted":true},"execution_count":27,"outputs":[{"execution_count":27,"output_type":"execute_result","data":{"text/plain":"array([0, 1])"},"metadata":{}}]},{"cell_type":"code","source":"ds=pd.read_csv(\"/kaggle/input/spam-mails-dataset/spam_ham_dataset.csv\")","metadata":{"execution":{"iopub.status.busy":"2024-08-03T02:14:32.215110Z","iopub.execute_input":"2024-08-03T02:14:32.215545Z","iopub.status.idle":"2024-08-03T02:14:32.280881Z","shell.execute_reply.started":"2024-08-03T02:14:32.215509Z","shell.execute_reply":"2024-08-03T02:14:32.279602Z"},"trusted":true},"execution_count":101,"outputs":[]},{"cell_type":"code","source":"ds_x = ds['text'].tolist()","metadata":{"execution":{"iopub.status.busy":"2024-08-03T02:14:34.309612Z","iopub.execute_input":"2024-08-03T02:14:34.310073Z","iopub.status.idle":"2024-08-03T02:14:34.316688Z","shell.execute_reply.started":"2024-08-03T02:14:34.310041Z","shell.execute_reply":"2024-08-03T02:14:34.315424Z"},"trusted":true},"execution_count":102,"outputs":[]},{"cell_type":"code","source":"mails=v.transform(ds_x)","metadata":{"execution":{"iopub.status.busy":"2024-08-03T02:14:36.155918Z","iopub.execute_input":"2024-08-03T02:14:36.156340Z","iopub.status.idle":"2024-08-03T02:14:37.209878Z","shell.execute_reply.started":"2024-08-03T02:14:36.156306Z","shell.execute_reply":"2024-08-03T02:14:37.208628Z"},"trusted":true},"execution_count":103,"outputs":[]},{"cell_type":"code","source":"mails","metadata":{"execution":{"iopub.status.busy":"2024-08-03T02:14:44.683711Z","iopub.execute_input":"2024-08-03T02:14:44.684755Z","iopub.status.idle":"2024-08-03T02:14:44.691705Z","shell.execute_reply.started":"2024-08-03T02:14:44.684693Z","shell.execute_reply":"2024-08-03T02:14:44.690537Z"},"trusted":true},"execution_count":104,"outputs":[{"execution_count":104,"output_type":"execute_result","data":{"text/plain":"<5171x462064 sparse matrix of type '<class 'numpy.int64'>'\n\twith 452994 stored elements in Compressed Sparse Row format>"},"metadata":{}}]},{"cell_type":"code","source":"prediction=nn_model.predict(mails)","metadata":{"execution":{"iopub.status.busy":"2024-08-03T02:15:18.908761Z","iopub.execute_input":"2024-08-03T02:15:18.909668Z","iopub.status.idle":"2024-08-03T02:15:19.738264Z","shell.execute_reply.started":"2024-08-03T02:15:18.909620Z","shell.execute_reply":"2024-08-03T02:15:19.736967Z"},"trusted":true},"execution_count":105,"outputs":[{"name":"stdout","text":"\u001b[1m162/162\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 3ms/step\n","output_type":"stream"}]},{"cell_type":"code","source":"outputs=(prediction >= 0.5).astype(int).reshape(-1)","metadata":{"execution":{"iopub.status.busy":"2024-08-03T02:15:42.513112Z","iopub.execute_input":"2024-08-03T02:15:42.513532Z","iopub.status.idle":"2024-08-03T02:15:42.520174Z","shell.execute_reply.started":"2024-08-03T02:15:42.513504Z","shell.execute_reply":"2024-08-03T02:15:42.518560Z"},"trusted":true},"execution_count":106,"outputs":[]},{"cell_type":"code","source":"y_output=ds[\"label_num\"]","metadata":{"execution":{"iopub.status.busy":"2024-08-03T02:16:11.609440Z","iopub.execute_input":"2024-08-03T02:16:11.609888Z","iopub.status.idle":"2024-08-03T02:16:11.616515Z","shell.execute_reply.started":"2024-08-03T02:16:11.609854Z","shell.execute_reply":"2024-08-03T02:16:11.615266Z"},"trusted":true},"execution_count":108,"outputs":[]},{"cell_type":"code","source":"y_output","metadata":{"execution":{"iopub.status.busy":"2024-08-03T02:16:15.289120Z","iopub.execute_input":"2024-08-03T02:16:15.289534Z","iopub.status.idle":"2024-08-03T02:16:15.299161Z","shell.execute_reply.started":"2024-08-03T02:16:15.289504Z","shell.execute_reply":"2024-08-03T02:16:15.297702Z"},"trusted":true},"execution_count":109,"outputs":[{"execution_count":109,"output_type":"execute_result","data":{"text/plain":"0       0\n1       0\n2       0\n3       1\n4       0\n       ..\n5166    0\n5167    0\n5168    0\n5169    0\n5170    1\nName: label_num, Length: 5171, dtype: int64"},"metadata":{}}]},{"cell_type":"code","source":"print(classification_report(y_output, outputs))","metadata":{"execution":{"iopub.status.busy":"2024-08-03T02:16:39.833246Z","iopub.execute_input":"2024-08-03T02:16:39.833696Z","iopub.status.idle":"2024-08-03T02:16:39.858146Z","shell.execute_reply.started":"2024-08-03T02:16:39.833663Z","shell.execute_reply":"2024-08-03T02:16:39.857044Z"},"trusted":true},"execution_count":110,"outputs":[{"name":"stdout","text":"              precision    recall  f1-score   support\n\n           0       0.98      1.00      0.99      3672\n           1       1.00      0.95      0.97      1499\n\n    accuracy                           0.99      5171\n   macro avg       0.99      0.98      0.98      5171\nweighted avg       0.99      0.99      0.99      5171\n\n","output_type":"stream"}]}]}